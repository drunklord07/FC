#!/bin/bash

REGION="ap-south-1"
MAX_PARALLEL=10
TMP_FILE="/tmp/prowler_dangling_ip_report.txt"
> "$TMP_FILE"

echo "🔍 Starting Prowler-style Route 53 A record audit (Region: $REGION)..."

# Function to check IP status
check_ip() {
  local IP="$1"
  local NAME="$2"

  MATCH=$(aws ec2 describe-addresses \
    --region "$REGION" \
    --filters Name=public-ip,Values="$IP" \
    --query "Addresses[*].PublicIp" \
    --output text)

  if [ -z "$MATCH" ]; then
    echo "FAIL\t$name\t$IP\tDangling IP (not allocated)" >> "$TMP_FILE"
  else
    echo "PASS\t$name\t$IP\tActive IP (allocated)" >> "$TMP_FILE"
  fi
}

# Get hosted zones
ZONE_IDS=$(aws route53 list-hosted-zones \
  --query "HostedZones[*].Id" \
  --output text | sed 's|/hostedzone/||g')

JOB_COUNT=0

for ZONE_ID in $ZONE_IDS; do
  echo -e "\n📘 Hosted Zone: $ZONE_ID"

  RECORDS=$(aws route53 list-resource-record-sets \
    --hosted-zone-id "$ZONE_ID" \
    --query "ResourceRecordSets[?Type=='A'].[Name, ResourceRecords[*].Value[]]" \
    --output text)

  while read -r NAME IP; do
    if [[ "$IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "🔎 $NAME -> $IP"
      check_ip "$IP" "$NAME" &

      ((JOB_COUNT++))
      if (( JOB_COUNT >= MAX_PARALLEL )); then
        wait
        JOB_COUNT=0
      fi
    fi
  done <<< "$RECORDS"
done

wait  # Final wait

# Output result
echo -e "\n===== Prowler-Style DNS Dangling A Record Report ====="
printf "STATUS\tDOMAIN\tIP\tDETAIL\n"
sort "$TMP_FILE"
TOTAL=$(wc -l < "$TMP_FILE")
FAILS=$(grep -c "^FAIL" "$TMP_FILE")
PASSES=$(grep -c "^PASS" "$TMP_FILE")

echo -e "\nSUMMARY:"
echo "Total A records checked: $TOTAL"
echo "PASS (active IPs):       $PASSES"
echo "FAIL (dangling IPs):     $FAILS"

rm -f "$TMP_FILE"
