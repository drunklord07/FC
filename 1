#!/bin/bash

non_compliant_count=0
total_checked=0

# Get all AWS regions
regions=$(aws ec2 describe-regions --query 'Regions[*].RegionName' --output text)

echo -e "\nüîç Starting SQS compliance audit across all AWS regions...\n"

for region in $regions; do
  echo "üåé Scanning region: $region"

  # Get all SQS queues in the region
  queue_urls=$(aws sqs list-queues --region "$region" --query 'QueueUrls' --output text 2>/dev/null)

  if [[ -z "$queue_urls" ]]; then
    echo "  ‚û§ No SQS queues found in $region."
    continue
  fi

  for queue_url in $queue_urls; do
    echo "  üîÑ Checking queue: $queue_url"
    ((total_checked++))

    # Get the policy attribute (10 sec timeout)
    raw_policy=$(timeout 10 aws sqs get-queue-attributes \
      --region "$region" \
      --queue-url "$queue_url" \
      --attribute-names Policy \
      --query 'Attributes.Policy' \
      --output text 2>/dev/null)

    if [[ $? -ne 0 ]]; then
      echo "    ‚ö†Ô∏è  Skipped due to timeout or error."
      continue
    fi

    if [[ "$raw_policy" == "None" || "$raw_policy" == "null" ]]; then
      echo "    ‚úÖ Compliant (no policy attached)"
      continue
    fi

    # Clean up the policy string
    policy=$(echo "$raw_policy" | tr -d '[:space:]')

    # Check for public access
    if [[ "$policy" == *'"Effect":"Allow"'* && "$policy" == *'"Principal":"*"'* ]]; then
      echo "    ‚ùå Non-Compliant: Principal is '*' with Effect 'Allow'"
      ((non_compliant_count++))
    elif [[ "$policy" == *'"Effect":"Allow"'* && "$policy" == *'"AWS":"*"'* ]]; then
      echo "    ‚ùå Non-Compliant: Principal.AWS is '*' with Effect 'Allow'"
      ((non_compliant_count++))
    else
      echo "    ‚úÖ Compliant"
    fi
  done
done

echo -e "\nüìä Audit Summary:"
echo "  ‚û§ Total queues checked: $total_checked"
echo "  ‚ùå Non-Compliant queues: $non_compliant_count"
